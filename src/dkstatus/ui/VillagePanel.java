
package dkstatus.ui;

import dkstatus.Utils;
import dkstatus.world.MarchingArmy;
import dkstatus.world.Unit;
import dkstatus.world.UnitType;
import dkstatus.world.Village;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Johny
 */
public class VillagePanel extends javax.swing.JPanel {

    private final Integer id;
    
    /**
     * Creates new form VillagePanel
     * @param id
     */
    public VillagePanel(Integer id) {
        this.id = id;
        
        initComponents();
        hideUnits();        
        
        final int villageId = id;
        lstIncoming.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting())
                    return;
                
                MarchingArmy att = (MarchingArmy)lstIncoming.getSelectedValue();
                if (att == null)
                    return;
                
                try {
                    Desktop.getDesktop().browse(new URI(Utils.getLink("village=" + villageId + "&id=" + att.getCommandId() + "&type=other&screen=info_command")));
                } catch (URISyntaxException | IOException ex) {
                    Logger.getLogger(UIUtils.class.getName()).log(Level.INFO, null, ex);
                }
            }
        }); 
        lstOutgoing.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting())
                    return;
                
                MarchingArmy att = (MarchingArmy)lstOutgoing.getSelectedValue();
                if (att == null)
                    return;
                
                try {
                    Desktop.getDesktop().browse(new URI(Utils.getLink("village=" + villageId + "&id=" + att.getCommandId() + "&type=own&screen=info_command")));
                } catch (URISyntaxException | IOException ex) {
                    Logger.getLogger(UIUtils.class.getName()).log(Level.INFO, null, ex);
                }
            }
        });         
        
        UIUtils.transformToHyperlink(lblWoodCount, "village=" + id + "&screen=wood");
        UIUtils.transformToHyperlink(lblStoneCount, "village=" + id + "&screen=stone");
        UIUtils.transformToHyperlink(lblIronCount, "village=" + id + "&screen=iron");
        UIUtils.transformToHyperlink(lblStorageCount, "village=" + id + "&screen=storage");
        UIUtils.transformToHyperlink(lblPopulation, "village=" + id + "&screen=farm");
        
        UIUtils.transformToHyperlink(lblVillageName, "village=" + id + "&screen=overview");
    }

    private void hideUnits() {
        lblArcher.setVisible(false);
        lblAxe.setVisible(false);
        lblCatapult.setVisible(false);
        lblHeavy.setVisible(false);
        lblLight.setVisible(false);
        lblMarcher.setVisible(false);
        lblNoble.setVisible(false);
        lblPaladin.setVisible(false);
        lblRam.setVisible(false);
        lblSpear.setVisible(false);
        lblSpy.setVisible(false);
        lblSword.setVisible(false);
    }

    public Integer getId() {
        return id;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pHeader = new javax.swing.JPanel();
        pVillageInfo = new javax.swing.JPanel();
        lblVillageName = new javax.swing.JLabel();
        pResources = new javax.swing.JPanel();
        lblWoodCount = new javax.swing.JLabel();
        lblStoneCount = new javax.swing.JLabel();
        lblIronCount = new javax.swing.JLabel();
        lblStorageCount = new javax.swing.JLabel();
        lblPopulation = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        pUnits = new javax.swing.JPanel();
        pUnits1 = new javax.swing.JPanel();
        lblSpear = new javax.swing.JLabel();
        lblSword = new javax.swing.JLabel();
        lblAxe = new javax.swing.JLabel();
        lblArcher = new javax.swing.JLabel();
        lblRam = new javax.swing.JLabel();
        lblCatapult = new javax.swing.JLabel();
        pUnits2 = new javax.swing.JPanel();
        lblSpy = new javax.swing.JLabel();
        lblLight = new javax.swing.JLabel();
        lblMarcher = new javax.swing.JLabel();
        lblHeavy = new javax.swing.JLabel();
        lblPaladin = new javax.swing.JLabel();
        lblNoble = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5));
        pIncoming = new javax.swing.JPanel();
        spIncoming = new javax.swing.JScrollPane();
        lstIncoming = new javax.swing.JList();
        pOutgoing = new javax.swing.JPanel();
        spOutgoing = new javax.swing.JScrollPane();
        lstOutgoing = new javax.swing.JList();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        pHeader.setLayout(new javax.swing.BoxLayout(pHeader, javax.swing.BoxLayout.LINE_AXIS));

        pVillageInfo.setPreferredSize(new java.awt.Dimension(200, 90));

        lblVillageName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/village.png"))); // NOI18N
        lblVillageName.setText("Uber Vesnice (111|222) K01");

        pResources.setPreferredSize(new java.awt.Dimension(301, 76));
        pResources.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        lblWoodCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/wood.png"))); // NOI18N
        lblWoodCount.setText("0");
        pResources.add(lblWoodCount);

        lblStoneCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/stone.png"))); // NOI18N
        lblStoneCount.setText("0");
        pResources.add(lblStoneCount);

        lblIronCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/iron.png"))); // NOI18N
        lblIronCount.setText("0");
        pResources.add(lblIronCount);

        lblStorageCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/storage.png"))); // NOI18N
        lblStorageCount.setText("0");
        pResources.add(lblStorageCount);

        lblPopulation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/worker.png"))); // NOI18N
        lblPopulation.setText("0/0");
        pResources.add(lblPopulation);

        javax.swing.GroupLayout pVillageInfoLayout = new javax.swing.GroupLayout(pVillageInfo);
        pVillageInfo.setLayout(pVillageInfoLayout);
        pVillageInfoLayout.setHorizontalGroup(
            pVillageInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pVillageInfoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblVillageName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pVillageInfoLayout.createSequentialGroup()
                .addComponent(pResources, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        pVillageInfoLayout.setVerticalGroup(
            pVillageInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pVillageInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblVillageName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pResources, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        pHeader.add(pVillageInfo);
        pHeader.add(filler2);

        lblSpear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_spear.png"))); // NOI18N
        lblSpear.setText("40000 +100 (16:45:11)");

        lblSword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_sword.png"))); // NOI18N
        lblSword.setText("0 +100 (16:45:11)");

        lblAxe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_axe.png"))); // NOI18N
        lblAxe.setText("3000 +100 (16:45:11)");

        lblArcher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_archer.png"))); // NOI18N
        lblArcher.setText("0 +100 (16:45:11)");

        lblRam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_ram.png"))); // NOI18N
        lblRam.setText("3333 +100 (16:45:11)");

        lblCatapult.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_catapult.png"))); // NOI18N
        lblCatapult.setText("3333 +100 (16:45:11)");

        javax.swing.GroupLayout pUnits1Layout = new javax.swing.GroupLayout(pUnits1);
        pUnits1.setLayout(pUnits1Layout);
        pUnits1Layout.setHorizontalGroup(
            pUnits1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pUnits1Layout.createSequentialGroup()
                .addGroup(pUnits1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSpear)
                    .addComponent(lblSword)
                    .addComponent(lblAxe)
                    .addComponent(lblArcher)
                    .addComponent(lblRam)
                    .addComponent(lblCatapult))
                .addGap(0, 0, 0))
        );
        pUnits1Layout.setVerticalGroup(
            pUnits1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pUnits1Layout.createSequentialGroup()
                .addComponent(lblSpear)
                .addGap(0, 0, 0)
                .addComponent(lblSword)
                .addGap(0, 0, 0)
                .addComponent(lblAxe)
                .addGap(0, 0, 0)
                .addComponent(lblArcher)
                .addGap(0, 0, 0)
                .addComponent(lblRam)
                .addGap(0, 0, 0)
                .addComponent(lblCatapult)
                .addGap(0, 0, 0))
        );

        lblSpy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_spy.png"))); // NOI18N
        lblSpy.setText("3333 +100 (16:45:11)");

        lblLight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_light.png"))); // NOI18N
        lblLight.setText("3333 +100 (16:45:11)");

        lblMarcher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_marcher.png"))); // NOI18N
        lblMarcher.setText("3333");

        lblHeavy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_heavy.png"))); // NOI18N
        lblHeavy.setText("3333 +1 (03:45:11)");

        lblPaladin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_knight.png"))); // NOI18N
        lblPaladin.setText("1");

        lblNoble.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/unit_snob.png"))); // NOI18N
        lblNoble.setText("3 +1 (16:45:11)");

        javax.swing.GroupLayout pUnits2Layout = new javax.swing.GroupLayout(pUnits2);
        pUnits2.setLayout(pUnits2Layout);
        pUnits2Layout.setHorizontalGroup(
            pUnits2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pUnits2Layout.createSequentialGroup()
                .addGroup(pUnits2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSpy)
                    .addComponent(lblLight)
                    .addComponent(lblMarcher)
                    .addComponent(lblNoble)
                    .addGroup(pUnits2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pUnits2Layout.createSequentialGroup()
                            .addComponent(lblPaladin)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(lblHeavy)))
                .addGap(0, 0, 0))
        );
        pUnits2Layout.setVerticalGroup(
            pUnits2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pUnits2Layout.createSequentialGroup()
                .addComponent(lblSpy)
                .addGap(0, 0, 0)
                .addComponent(lblLight)
                .addGap(0, 0, 0)
                .addComponent(lblMarcher)
                .addGap(0, 0, 0)
                .addComponent(lblHeavy)
                .addGap(12, 12, 12)
                .addComponent(lblPaladin)
                .addGap(0, 0, 0)
                .addComponent(lblNoble)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout pUnitsLayout = new javax.swing.GroupLayout(pUnits);
        pUnits.setLayout(pUnitsLayout);
        pUnitsLayout.setHorizontalGroup(
            pUnitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pUnitsLayout.createSequentialGroup()
                .addComponent(pUnits1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(pUnits2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pUnitsLayout.setVerticalGroup(
            pUnitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pUnits1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pUnits2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pHeader.add(pUnits);
        pHeader.add(filler3);

        add(pHeader);
        add(filler1);

        spIncoming.setViewportView(lstIncoming);

        javax.swing.GroupLayout pIncomingLayout = new javax.swing.GroupLayout(pIncoming);
        pIncoming.setLayout(pIncomingLayout);
        pIncomingLayout.setHorizontalGroup(
            pIncomingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pIncomingLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(spIncoming, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        pIncomingLayout.setVerticalGroup(
            pIncomingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pIncomingLayout.createSequentialGroup()
                .addComponent(spIncoming, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        add(pIncoming);

        spOutgoing.setViewportView(lstOutgoing);

        javax.swing.GroupLayout pOutgoingLayout = new javax.swing.GroupLayout(pOutgoing);
        pOutgoing.setLayout(pOutgoingLayout);
        pOutgoingLayout.setHorizontalGroup(
            pOutgoingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 681, Short.MAX_VALUE)
            .addGroup(pOutgoingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(spOutgoing, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE))
        );
        pOutgoingLayout.setVerticalGroup(
            pOutgoingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 175, Short.MAX_VALUE)
            .addGroup(pOutgoingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(spOutgoing, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        add(pOutgoing);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel lblArcher;
    private javax.swing.JLabel lblAxe;
    private javax.swing.JLabel lblCatapult;
    private javax.swing.JLabel lblHeavy;
    private javax.swing.JLabel lblIronCount;
    private javax.swing.JLabel lblLight;
    private javax.swing.JLabel lblMarcher;
    private javax.swing.JLabel lblNoble;
    private javax.swing.JLabel lblPaladin;
    private javax.swing.JLabel lblPopulation;
    private javax.swing.JLabel lblRam;
    private javax.swing.JLabel lblSpear;
    private javax.swing.JLabel lblSpy;
    private javax.swing.JLabel lblStoneCount;
    private javax.swing.JLabel lblStorageCount;
    private javax.swing.JLabel lblSword;
    private javax.swing.JLabel lblVillageName;
    private javax.swing.JLabel lblWoodCount;
    private javax.swing.JList lstIncoming;
    private javax.swing.JList lstOutgoing;
    private javax.swing.JPanel pHeader;
    private javax.swing.JPanel pIncoming;
    private javax.swing.JPanel pOutgoing;
    private javax.swing.JPanel pResources;
    private javax.swing.JPanel pUnits;
    private javax.swing.JPanel pUnits1;
    private javax.swing.JPanel pUnits2;
    private javax.swing.JPanel pVillageInfo;
    private javax.swing.JScrollPane spIncoming;
    private javax.swing.JScrollPane spOutgoing;
    // End of variables declaration//GEN-END:variables

    void updateVillage(Village v, UpdateType type) {
        switch (type) {
            case VILLAGE_COMMON:
                updateCommonData(v);
                break;
            case VILLAGE_UNITS:
                updateUnits(v);
                break;    
            case VILLAGE_BUILDINGS:
                updateBuildings(v);
                break;                 
        }
    }

    private void updateCommonData(Village v) {
        lblVillageName.setText(v.toString());
        
        lblWoodCount.setText(String.valueOf(v.getResources().getWood()));
        lblStoneCount.setText(String.valueOf(v.getResources().getStone()));
        lblIronCount.setText(String.valueOf(v.getResources().getIron()));
        lblStorageCount.setText(String.valueOf(v.getResources().getStorage()));
        lblPopulation.setText(v.getPopulation().toString());
        
        Collections.sort(v.getIncomingArmies());
        Collections.sort(v.getOutgoingArmies());
        lstIncoming.setListData(v.getIncomingArmies().toArray());
        lstOutgoing.setListData(v.getOutgoingArmies().toArray());
        
        if (v.IsAttacked())
            requestFocusInWindow(); // TODO: not working
    }

    private void updateUnits(Village v) {
        hideUnits();
        
        for (Unit u : v.getUnits()) {
            JLabel unitLabel = getUnitLabel(u.getType());
            if (u.getTotal() > 0) {
                unitLabel.setVisible(true);
                if (u.getRecruiting() <= 0)
                    unitLabel.setText(String.valueOf(u.getInVillage()));
                else
                    unitLabel.setText(String.format("%d +%d (%s)", u.getInVillage(), u.getRecruiting(),
                            u.getRecruitmentFinishes().toString("HH:mm:ss")));
                
            }                
        }
    }

    private JLabel getUnitLabel(UnitType type) {
        switch (type) {
            case SPEARMAN:
                return lblSpear;
            case SWORDSMAN:
                return lblSword;
            case AXEMAN:
                return lblAxe;
            case ARCHER:
                return lblArcher;
            case SPY:
               return lblSpy;
            case LIGHT_CAVALRY:
                return lblLight;
            case MOUNTED_ARCHER:
                return lblMarcher;
            case HEAVY_CAVALRY:
                return lblHeavy;
            case RAM:
                return lblRam;
            case CATAPULT:
                return lblCatapult;
            case PALADIN:
                return lblPaladin;
            case NOBLE:
                return lblNoble;
        }
        
        return null;
    }
    
    private void updateBuildings(Village v) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
