package dkstatus.ui;

import dkstatus.DKStatus;
import dkstatus.cookies.BrowserManager;
import dkstatus.cookies.ChromeDataProvider;
import dkstatus.cookies.FirefoxDataProvider;
import dkstatus.world.Player;
import dkstatus.world.Village;
import dkstatus.world.World;
import java.awt.Component;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Johny
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        UIUtils.transformToHyperlink(lblAnnounce, "screen=report");
        UIUtils.transformToHyperlink(lblMessage, "screen=mail");
        UIUtils.transformToHyperlink(lblForum, "screen=ally&mode=forum");
        UIUtils.transformToHyperlink(lblPlayerName, "screen=info_player");
        UIUtils.transformToHyperlink(lblPointCount, "screen=ranking&mode=player");
        
        pPlayer.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpVillages = new javax.swing.JTabbedPane();
        pPlayer = new javax.swing.JPanel();
        lblPlayer = new javax.swing.JLabel();
        lblPlayerName = new javax.swing.JLabel();
        lblPointCount = new javax.swing.JLabel();
        lblAnnounce = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();
        lblForum = new javax.swing.JLabel();
        tbToolbar = new javax.swing.JToolBar();
        mbMenu = new javax.swing.JMenuBar();
        mSettings = new javax.swing.JMenu();
        mBrowser = new javax.swing.JMenu();
        rbmiChrome = new javax.swing.JRadioButtonMenuItem();
        rbmiFirefox = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DK Status");

        lblPlayer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPlayer.setText("Hráč:");

        lblPointCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/wheel.png"))); // NOI18N
        lblPointCount.setText("0");

        lblAnnounce.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/announce.png"))); // NOI18N
        lblAnnounce.setText("Oznámení");

        lblMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/message.png"))); // NOI18N
        lblMessage.setText("Zprávy");

        lblForum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/forum_active.png"))); // NOI18N
        lblForum.setText("Kmen");

        javax.swing.GroupLayout pPlayerLayout = new javax.swing.GroupLayout(pPlayer);
        pPlayer.setLayout(pPlayerLayout);
        pPlayerLayout.setHorizontalGroup(
            pPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPlayerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPlayerName)
                .addGap(128, 128, 128)
                .addComponent(lblPointCount)
                .addGap(58, 58, 58)
                .addComponent(lblAnnounce)
                .addGap(18, 18, 18)
                .addComponent(lblMessage)
                .addGap(18, 18, 18)
                .addComponent(lblForum)
                .addContainerGap(542, Short.MAX_VALUE))
        );
        pPlayerLayout.setVerticalGroup(
            pPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPlayerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlayer)
                    .addComponent(lblPlayerName)
                    .addComponent(lblPointCount)
                    .addComponent(lblAnnounce)
                    .addComponent(lblMessage)
                    .addComponent(lblForum))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tbToolbar.setRollover(true);

        mSettings.setText("Settings");
        mbMenu.add(mSettings);

        mBrowser.setText("Browser");

        rbmiChrome.setText("Chrome");
        rbmiChrome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSourceBrowserToChrome(evt);
            }
        });
        mBrowser.add(rbmiChrome);

        rbmiFirefox.setSelected(true);
        rbmiFirefox.setText("Firefox");
        rbmiFirefox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSourceBrowserToFirefox(evt);
            }
        });
        mBrowser.add(rbmiFirefox);

        mbMenu.add(mBrowser);

        setJMenuBar(mbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tpVillages)
            .addComponent(tbToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpVillages, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeSourceBrowserToChrome(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSourceBrowserToChrome
        BrowserManager.setProvider(new ChromeDataProvider());
        DKStatus.RefreshUpdate();
        rbmiFirefox.setSelected(false);
    }//GEN-LAST:event_changeSourceBrowserToChrome

    private void changeSourceBrowserToFirefox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSourceBrowserToFirefox
        BrowserManager.setProvider(new FirefoxDataProvider());
        DKStatus.RefreshUpdate();
        rbmiChrome.setSelected(false);
    }//GEN-LAST:event_changeSourceBrowserToFirefox

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAnnounce;
    private javax.swing.JLabel lblForum;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblPlayer;
    private javax.swing.JLabel lblPlayerName;
    private javax.swing.JLabel lblPointCount;
    private javax.swing.JMenu mBrowser;
    private javax.swing.JMenu mSettings;
    private javax.swing.JMenuBar mbMenu;
    private javax.swing.JPanel pPlayer;
    private javax.swing.JRadioButtonMenuItem rbmiChrome;
    private javax.swing.JRadioButtonMenuItem rbmiFirefox;
    private javax.swing.JToolBar tbToolbar;
    private javax.swing.JTabbedPane tpVillages;
    // End of variables declaration//GEN-END:variables

    public void updateWindow(World world) {
        Player plr = world.getPlayer();
        
        lblPlayerName.setText(plr.getName());
        lblPointCount.setText(String.valueOf(plr.getPoints()));
        lblAnnounce.setVisible(plr.hasAnnounce());
        lblMessage.setVisible(plr.hasMessage());
        lblForum.setVisible(plr.hasForumMessage());
        
        pPlayer.setVisible(true);
        
        updateVillages(plr.getVillages());
    }

    private void updateVillages(List<Village> villages) {
        List<Integer> newIds = new ArrayList<>();
        for (Village v : villages) // get ids of all current villages
            newIds.add(v.getId());
        
        for (int i = 0; i < tpVillages.getTabCount(); i++)
        {
           VillagePanel vp = (VillagePanel)tpVillages.getComponentAt(i);
           if (!newIds.contains(vp.getId())) { // remove tabs with non-existing villages
               tpVillages.remove(vp);
               i--;
           } else {
               newIds.remove(vp.getId()); // otherwise set id as not new
           }
        }
        
        for (Village v : villages) {
            VillagePanel vp = null;
            if (newIds.contains(v.getId())) {
                vp = new VillagePanel(v.getId());
                tpVillages.add(v.toString(), vp);
            } else {
                for (int i = 0; i < tpVillages.getTabCount(); i++)
                {
                    VillagePanel tmp = (VillagePanel)tpVillages.getTabComponentAt(i);
                    if (tmp.getId() == v.getId()) {
                        vp = tmp;
                        break;
                    }
                }
            }
            
            if (vp != null)
                vp.updateVillage(v);
        }
    }
}
